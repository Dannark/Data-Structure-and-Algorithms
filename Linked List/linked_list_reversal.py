# -*- coding: utf-8 -*-
"""Linked List Reversal.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1ffhq9sK2XCguidH29D-P8XAQKk2kiaWY
"""

class Node(object):
  def __init__(self,value):
    self.value = value
    self.nextnode = None

def reverse(a):
  reverse_helper(a, None)

def reverse_helper(current_node, previous_node):
  nextnode = current_node.nextnode
  current_node.nextnode = previous_node

  if nextnode != None:
    previous_node = current_node
    reverse_helper(nextnode, previous_node)

# another better version
class Node(object):
  def __init__(self,value):
    self.value = value
    self.nextnode = None

def reverse(head):

  current = head
  previous = None
  nextnode = None

  while current:
    nextnode = current.nextnode
    current.nextnode = previous
    
    previous = current
    current = nextnode
  
  return previous

"""## Testing"""

a = Node(1)
b = Node(2)
c = Node(3)
d = Node(4)

a.nextnode = b
b.nextnode = c
c.nextnode = d

reverse(a)

print(d.nextnode.value)
print(c.nextnode.value)
print(b.nextnode.value)
#print(a.nextnode.value) #error
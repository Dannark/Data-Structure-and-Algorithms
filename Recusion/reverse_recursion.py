# -*- coding: utf-8 -*-
"""Reverse Recursion.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1zU56VLmcyJOjqFVKl2R96QcPUuoakILc
"""

# Commented out IPython magic to ensure Python compatibility.
def reverse(s):

  if len(s) == 1:
    return s
  else:
    first_string = s[0]
    new_string = s[1:]
    return reverse(new_string) + first_string

# %timeit reverse('abcd')

# Commented out IPython magic to ensure Python compatibility.
#About 40% faster
def reverse(s):
  
  if len(s) <= 1:
    return s
  else:

    return s[-1] + reverse(s[1:-1]) + s[0]

# %timeit reverse('abcdefghijlmnopqstuvxyz1234567890abcdefghijlmnopqstuvxyz1234567890')

'''
RUN THIS CELL TO TEST YOUR FUNCTION AGAINST SOME TEST CASES
'''

from nose.tools import assert_equal

class TestReverse(object):
    
    def test_rev(self,solution):
        assert_equal(solution('hello'),'olleh')
        assert_equal(solution('hello world'),'dlrow olleh')
        assert_equal(solution('123456789'),'987654321')
        
        print ('PASSED ALL TEST CASES!')
        
# Run Tests
test = TestReverse()
test.test_rev(reverse)

# Commented out IPython magic to ensure Python compatibility.
def reverse(s):
    if(len(s)<=1):
        return s
    else:
        m = int(len(s)/2)
        return reverse(s[m:]) + (reverse((s[:m])))
    pass
# %timeit reverse('abcdefghijlmnopqstuvxyz1234567890abcdefghijlmnopqstuvxyz1234567890')